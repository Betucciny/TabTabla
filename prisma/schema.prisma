// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GameSession {
  id               String         @id @default(uuid())
  shortCode        String         @unique @db.VarChar(10)
  status           GameStatus     @default(Waiting)
  hostPlayerId     String?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  initialDeckOrder String[]       @default([])
  drawnCards       String[]       @default([])
  players          PlayerInGame[]

  @@index([shortCode])
}

model PlayerInGame {
  id            String       @id @default(uuid())
  gameSessionId String
  gameSession   GameSession  @relation(fields: [gameSessionId], references: [id], onDelete: Cascade)
  name          String       @db.VarChar(50)
  socketId      String?
  playerTabla   String[]
  status        PlayerStatus @default(Waiting)
  isWinner      Boolean      @default(false)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@unique([gameSessionId, name])
  @@index([gameSessionId])
}

enum GameStatus {
  Playing
  Waiting
}

enum PlayerStatus {
  Waiting
  Ready
  Playing
  Eliminated
}
